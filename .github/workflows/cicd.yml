# This workflow will build a Java project with Gradle and deploy to Azure AKS
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle and Azure AKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: javaappdevacre2ljmlwn.azurecr.io
  CONTAINER_NAME: java-app
  RESOURCE_GROUP: java-app-dev-rg
  CLUSTER_NAME: java-app-dev-aks
  DEPLOYMENT_MANIFEST_PATH: k8s/deployment.yaml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push image to ACR
      run: |
        az acr build --registry ${{ env.AZURE_CONTAINER_REGISTRY }} --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} .

    - name: Set up kubeconfig
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}

    - name: Deploy observability stack (if not exists)
      run: |
        if ! kubectl get namespace monitoring 2>/dev/null; then
          echo "Deploying observability stack..."
          timeout 600s ./deploy-observability.sh || {
            echo "Observability deployment timed out, continuing with app deployment"
            kubectl get pods -n monitoring || true
          }
        else
          echo "Monitoring namespace already exists, skipping observability deployment"
        fi

    - name: Update deployment image
      run: |
        sed -i 's|image: .*|image: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}|' ${{ env.DEPLOYMENT_MANIFEST_PATH }}

    - name: Deploy to AKS
      uses: azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        images: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        kubectl-version: 'latest'
      timeout-minutes: 15

    - name: Debug deployment status
      if: always()
      run: |
        echo "=== Deployment Status ==="
        kubectl get deployments
        echo "=== Pod Status ==="
        kubectl get pods -o wide
        echo "=== Pod Logs (if any pods exist) ==="
        kubectl logs -l app=java-app --tail=50 || echo "No logs available yet"
        echo "=== Events ==="
        kubectl get events --sort-by=.metadata.creationTimestamp

    - name: Run health checks
      run: |
        kubectl rollout status deployment/java-app-deployment --timeout=600s
        kubectl get services
        
    - name: Notify monitoring systems
      run: |
        echo "Deployment completed. Monitoring endpoints:"
        kubectl get services -n monitoring
         
